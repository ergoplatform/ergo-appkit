{
  "fileName": "BabelFeeBoxState.java",
  "filePath": "lib-api/src/main/java/org/ergoplatform/appkit/babelfee/BabelFeeBoxState.java",
  "url": "https://github.com/ergoplatform/ergo-appkit/lib-api/src/main/java/org/ergoplatform/appkit/babelfee/BabelFeeBoxState.java",
  "summary": "The `BabelFeeBoxState` class represents a state of a Babel Fee Box, which is a contract that allows paying transaction fees in tokens instead of the platform's primary token (ERG). This class provides methods to interact with the Babel Fee Box, such as calculating the amount of tokens to sell to receive a certain amount of nanoErgs, building a new Babel Fee Box state after a token swap, and building an `OutBox` representing the Babel Fee Box.\n\nThe constructor of the `BabelFeeBoxState` class takes a `TransactionBox` object as input and extracts the necessary information from it to initialize the state of the Babel Fee Box. The `TransactionBox` object represents an unspent output box of a transaction on the Ergo blockchain. The `BabelFeeBoxState` class extracts the value, registers, and tokens of the `TransactionBox` object to initialize the `value`, `boxCreator`, `pricePerToken`, `tokenId`, and `tokenAmount` fields of the `BabelFeeBoxState` object. The `value` field represents the overall nanoErg value in the box, the `boxCreator` field represents the owner of the Babel Fee Box, the `pricePerToken` field represents the nanoErg amount offered per raw token amount, the `tokenId` field represents the token id this Babel Fee Box is offering change for, and the `tokenAmount` field represents the raw amount of tokens already collected in the box.\n\nThe `BabelFeeBoxState` class provides getter methods for the `pricePerToken`, `tokenId`, `boxCreator`, `value`, and `tokenAmount` fields. It also provides methods to calculate the overall ERG value available to change for tokens, the max token raw amount possible to swap at the best price, and the amount of tokens to sell to receive a certain amount of nanoErgs. Additionally, it provides a method to build a new Babel Fee Box state after a token swap and a method to build an `OutBox` representing the Babel Fee Box.\n\nThe `buildSucceedingState` method takes a `tokenAmountChange` parameter, which represents the token amount to add to the new Babel Fee Box. It checks if the `tokenAmountChange` is greater than 0 and less than or equal to the max token amount to buy. If the `tokenAmountChange` is valid, it returns a new `BabelFeeBoxState` object with the updated `value` and `tokenAmount` fields.\n\nThe `buildOutbox` method takes a `txBuilder` parameter, which represents the `UnsignedTransactionBuilder` object used to build the new outbox, and an optional `precedingBabelBox` parameter, which represents the preceding Babel Fee Box if this is not the initial Babel Fee Box. It builds an `OutBoxBuilder` object with the necessary parameters, such as the contract, value, and registers, and returns an `OutBox` object representing the Babel Fee Box.\n\nOverall, the `BabelFeeBoxState` class provides a convenient way to interact with a Babel Fee Box on the Ergo blockchain. It allows developers to calculate the amount of tokens to sell to receive a certain amount of nanoErgs, build a new Babel Fee Box state after a token swap, and build an `OutBox` representing the Babel Fee Box.",
  "questions": "1. What is the purpose of the BabelFeeBoxState class?\n- The BabelFeeBoxState class represents a Babel Fee Box state, which is a contract that buys tokens and pays ERG, suitable to be used in any transaction.\n\n2. What are the main attributes of a BabelFeeBoxState object?\n- The main attributes of a BabelFeeBoxState object are pricePerToken, tokenId, boxCreator, value, and tokenAmount.\n\n3. What methods are available to interact with a BabelFeeBoxState object?\n- Some of the methods available to interact with a BabelFeeBoxState object include getPricePerToken(), getTokenId(), getBoxCreator(), getValue(), getTokenAmount(), calcTokensToSellForErgAmount(), buildSucceedingState(), and buildOutbox()."
}