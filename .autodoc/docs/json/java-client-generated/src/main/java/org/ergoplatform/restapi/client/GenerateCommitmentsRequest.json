{
  "fileName": "GenerateCommitmentsRequest.java",
  "filePath": "java-client-generated/src/main/java/org/ergoplatform/restapi/client/GenerateCommitmentsRequest.java",
  "url": "https://github.com/ergoplatform/ergo-appkit/java-client-generated/src/main/java/org/ergoplatform/restapi/client/GenerateCommitmentsRequest.java",
  "summary": "The `GenerateCommitmentsRequest` class is part of the Ergo Node API and is used to generate commitments to sign a transaction. This class is auto-generated by the Swagger code generator program and should not be edited manually. \n\nThe class has four fields: `tx`, `secrets`, `inputsRaw`, and `dataInputsRaw`. The `tx` field is an instance of the `UnsignedErgoTransaction` class and is required. The `secrets` field is an instance of the `GenerateCommitmentsRequestSecrets` class and is optional. The `inputsRaw` and `dataInputsRaw` fields are both lists of strings and are also optional. \n\nThe `tx` field represents the unsigned transaction for which commitments are being generated. The `secrets` field represents the secrets used to generate the commitments. The `inputsRaw` and `dataInputsRaw` fields are optional and represent the inputs and data inputs to be used in serialized form. \n\nThe `GenerateCommitmentsRequest` class has several methods that allow for setting and getting the values of its fields. The `tx()` method sets the value of the `tx` field and returns the instance of the class. The `secrets()` method sets the value of the `secrets` field and returns the instance of the class. The `inputsRaw()` method sets the value of the `inputsRaw` field and returns the instance of the class. The `addInputsRawItem()` method adds an item to the `inputsRaw` list and returns the instance of the class. The `dataInputsRaw()` method sets the value of the `dataInputsRaw` field and returns the instance of the class. The `addDataInputsRawItem()` method adds an item to the `dataInputsRaw` list and returns the instance of the class. \n\nThis class is used in the larger Ergo Node API project to generate commitments to sign a transaction. It can be used by developers who are building applications on top of the Ergo platform to ensure that transactions are signed correctly. \n\nExample usage:\n\n```\nUnsignedErgoTransaction tx = new UnsignedErgoTransaction();\nGenerateCommitmentsRequestSecrets secrets = new GenerateCommitmentsRequestSecrets();\nList<String> inputsRaw = new ArrayList<String>();\nList<String> dataInputsRaw = new ArrayList<String>();\n\nGenerateCommitmentsRequest request = new GenerateCommitmentsRequest()\n    .tx(tx)\n    .secrets(secrets)\n    .inputsRaw(inputsRaw)\n    .dataInputsRaw(dataInputsRaw);\n```",
  "questions": "1. What is the purpose of this code?\n- This code defines a request object for generating commitments to sign a transaction in the Ergo Node API.\n\n2. What are the required parameters for this request object?\n- The only required parameter is an UnsignedErgoTransaction object, which is set using the `tx` method.\n\n3. What are the optional parameters for this request object?\n- The optional parameters are `inputsRaw` and `dataInputsRaw`, which are lists of inputs to be used in serialized form, and `secrets`, which is an object of type GenerateCommitmentsRequestSecrets."
}