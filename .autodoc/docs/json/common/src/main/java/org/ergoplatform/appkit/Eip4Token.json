{
  "fileName": "Eip4Token.java",
  "filePath": "common/src/main/java/org/ergoplatform/appkit/Eip4Token.java",
  "url": "https://github.com/ergoplatform/ergo-appkit/common/src/main/java/org/ergoplatform/appkit/Eip4Token.java",
  "summary": "The `Eip4Token` class represents an EIP-4 compliant token, which is a standard for tokens on the Ergo blockchain. This class extends the `ErgoToken` class and adds additional fields and methods specific to EIP-4 tokens. \n\nThe required EIP-4 fields from R4, R5, and R6 are stored as private fields in the class: `name`, `description`, and `decimals`. The optional fields R7, R8, and R9 are stored as `ErgoValue` objects, which can hold any type of Ergo data. \n\nThe class provides several constructors for creating an `Eip4Token` object. The first constructor takes the required fields as well as the optional fields as `ErgoValue` objects. The second constructor takes only the required fields as strings. The third constructor takes all fields as arguments. \n\nThe class provides several methods for accessing the token's fields. `getTokenName()`, `getTokenDescription()`, and `getDecimals()` return the values of the required fields. `getAmountFormatted()` returns the token amount taking decimals into account. `getAssetType()` returns the type of asset this token represents, which is an enum value of `AssetType`. \n\nThe class also provides several methods for working with the optional fields. `getR7ByteArrayOrNull()` returns the byte content of register R7, or `null` if not set. `isNftAssetType()` returns `true` if this is an NFT token asset type according to EIP-4. `getNftContentHash()` returns the SHA256 content hash for NFT types, or `null` for non-NFT types. `getNftContentLink()` and `getNftCoverImageLink()` return the content link and cover image link for NFT types if available, otherwise `null`. \n\nFinally, the class provides several methods for getting the values of the token's registers for use in creating a token minting box. `getMintingBoxR4()`, `getMintingBoxR5()`, and `getMintingBoxR6()` return the values of registers R4, R5, and R6 as `ErgoValue` objects. `getMintingBoxR7()`, `getMintingBoxR8()`, and `getMintingBoxR9()` return the values of registers R7, R8, and R9 as `ErgoValue` objects, or `null` if not needed. \n\nOverall, the `Eip4Token` class provides a convenient way to work with EIP-4 compliant tokens on the Ergo blockchain. It can be used in conjunction with the `Eip4TokenBuilder` class to create and manage tokens.",
  "questions": "1. What is the purpose of this code?\n- This code represents an EIP-4 compliant token and provides methods to retrieve information about the token, such as its name, description, and decimals.\n\n2. What is the significance of the optional fields r7, r8, and r9?\n- These fields represent the contents of registers 7, 8, and 9, respectively, as specified in the EIP-4 specification. They are optional and can be null.\n\n3. What is the purpose of the AssetType enum?\n- The AssetType enum represents the different types of assets that an EIP-4 compliant token can optionally represent. It provides a method to retrieve the magic bytes associated with each asset type."
}