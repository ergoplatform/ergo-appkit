{
  "fileName": "ErgoToken.java",
  "filePath": "common/src/main/java/org/ergoplatform/appkit/ErgoToken.java",
  "url": "https://github.com/ergoplatform/ergo-appkit/common/src/main/java/org/ergoplatform/appkit/ErgoToken.java",
  "summary": "The `ErgoToken` class represents an Ergo token (also known as an asset) paired with its value. It is used to store information about a token, such as its ID and value, and can be used as a key for maps and sets. \n\nThe class has three constructors, each of which takes an ID and a value. The first constructor takes an `ErgoId` object and a `long` value, the second constructor takes a byte array and a `long` value, and the third constructor takes a string and a `long` value. The `ErgoId` object represents the ID of the token, which is a unique identifier for the token on the Ergo blockchain. The `long` value represents the value of the token, which is the number of tokens that are being represented.\n\nThe class has two getter methods, `getId()` and `getValue()`, which return the ID and value of the token, respectively.\n\nThe class also overrides three methods: `hashCode()`, `equals()`, and `toString()`. The `hashCode()` method returns a hash code for the `ErgoToken` object based on the hash codes of its ID and value. The `equals()` method checks if the given object is an `ErgoToken` object and if its ID and value are equal to the ID and value of the current object. The `toString()` method returns a string representation of the `ErgoToken` object in the format \"ErgoToken(ID, value)\".\n\nThis class is likely used in the larger `ergo-appkit` project to represent Ergo tokens and their values in various contexts, such as in transactions or in token-related queries to the Ergo blockchain. For example, the `ErgoToken` class may be used to represent the tokens being transferred in a transaction, or to represent the tokens held by a particular Ergo address. \n\nHere is an example of how the `ErgoToken` class might be used to create a new token object:\n\n```\nErgoId tokenId = new ErgoId(\"1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\");\nlong tokenValue = 1000000;\nErgoToken token = new ErgoToken(tokenId, tokenValue);\n```",
  "questions": "1. What is the purpose of the `ErgoToken` class?\n    \n    The `ErgoToken` class represents an ergo token (or asset) paired with its value, and implements equality. It can be used as keys for maps and sets.\n\n2. What are the parameters of the `ErgoToken` constructor?\n    \n    The `ErgoToken` constructor takes an `ErgoId` object and a `long` value as parameters. It also has two overloaded constructors that take a `byte[]` or a `String` as the first parameter and a `long` value as the second parameter.\n\n3. How does the `ErgoToken` class implement equality?\n    \n    The `ErgoToken` class overrides the `hashCode()` and `equals()` methods to implement equality. Two `ErgoToken` objects are considered equal if their `ErgoId` and `long` value are equal."
}